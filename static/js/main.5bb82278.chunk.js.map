{"version":3,"sources":["component/pop.js","component/Home.jsx","App.js","reportWebVitals.js","index.js"],"names":["Popup","props","trigger","className","onClick","setTrigger","icon","children","Home","useState","buttonpop","setButtonpop","t1","t2","t3","state","words","loop","cursor","cursorStyle","deleteSpeed","typeSpeed","href","color","target","download","title","inline","width","App","params","particles","number","value","density","enable","value_area","shape","type","stroke","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5bb82278.chunk.js","sourcesContent":["import react from \"react\";\r\nimport { Icon } from '@iconify/react';\r\nimport './pop.css';\r\nfunction Popup(props){\r\nreturn(props.trigger)?(\r\n    <div className=\"popup\">\r\n        <div className=\"pop-inner\">\r\n            <button className=\"closebtn\" onClick={()=>props.setTrigger(false)}><Icon icon=\"eva:arrow-back-outline\" /></button>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n    ):\"\";\r\n}\r\n\r\nexport default Popup;","import react, { useState } from \"react\";\r\nimport { Typewriter } from \"react-simple-typewriter\";\r\nimport './Home.css';\r\nimport { Icon } from '@iconify/react';\r\nimport { Link } from \"react-router-dom\";\r\nimport Popup from \"./pop\";\r\nconst Home = () => {\r\n    const [buttonpop, setButtonpop] = useState(false);\r\n    const [state] = useState({\r\n        t1: \"Hi!\",\r\n        t2: \"I am\",\r\n        t3: \"Pushpak Ninave\"\r\n    })\r\n    return (\r\n        <div className=\"Home\">\r\n            <div className=\"left_box t_box\">\r\n                <div className=\"fix_text\">\r\n                    <h2>\r\n                        <div className=\"title_1\">{state.t1}</div>\r\n                        <div className=\"title_2\">{state.t2}</div>\r\n                        <div className=\"title_3\">{state.t3}</div>\r\n                    </h2>\r\n                </div>\r\n                <div className=\"text\">\r\n                    <Typewriter\r\n                        words={['Coder', 'Blogger', 'Developer']}\r\n                        loop={true}\r\n                        cursor\r\n                        cursorStyle=\"_\"\r\n                        deleteSpeed={50}\r\n                        typeSpeed={80}\r\n                    />\r\n                </div>\r\n                <button onClick={() => setButtonpop(true)}>\r\n                    Bio\r\n                </button>\r\n            </div>\r\n            <Popup trigger={buttonpop} setTrigger={setButtonpop}>\r\n                <h3>More time to code less toil!</h3>\r\n                <p> Rooted strong and budding passionately as a developer. I am pushpak Ninave, currently pursuing B-tech in computer science,\r\n                    I make wild out a limb ideas as a developer.\r\n                    Java is one of my most prefered language of all. I am inquisitive of knowing backend architecture of any microservice platform.     \r\n                    Talking about my tech stack, i like building web-based applications using frameworks like\r\n                    ReactJs, Spring Boot and microservices.      \r\n                </p>\r\n                <a className=\"mailBox\" href=\"mailto: pushpakninave.jee@gmail.com\"><Icon icon=\"line-md:email-twotone-alt\" color=\"#c53c1b\" /></a>\r\n                <div className=\"b_ton\">\r\n                    <a target='_blank' href=\"https://drive.google.com/file/d/1ZqmXl5HKL6JVrjUcRWv2WoC-PWvMlIYo/view?usp=sharing\" download>\r\n                        <button title=\"Resume\"><Icon icon=\"akar-icons:cloud-download\" inline={true} /></button>\r\n                    </a>\r\n                </div>\r\n            </Popup>\r\n            <div className=\"right_box t_box\">\r\n\r\n                <div className=\"icon_box\">\r\n\r\n                    <a href=\"https://www.linkedin.com/in/pushpak-ninave-a17328192/\" title=\"Linkedin\" target='_blank'>\r\n                        <Icon className=\"icn\" icon=\"brandico:linkedin-rect\" />\r\n                    </a>\r\n                    <a href=\"https://aliencodes.hashnode.dev/\" title=\"Tech-blog\" target='_blank'>\r\n                        <Icon className=\"icn\" icon=\"simple-icons:hashnode\" />\r\n                    </a>\r\n                    <a href=\"https://leetcode.com/Pushpakninave/\" title=\"competative programming\" target='_blank'>\r\n                        <Icon className=\"icn\" icon=\"simple-icons:leetcode\" />\r\n                    </a>\r\n                    <a href=\"https://github.com/pushpakninave\" title=\"github\" target='_blank'>\r\n                        <Icon className=\"icn\" icon=\"bytesize:github\" />\r\n                    </a>\r\n                    {/* <a href=\"https://stackoverflow.com/users/15220760/brat?tab=profile\" title=\"stackoverflow\" target='_blank'>\r\n                        <Icon className=\"icn\" icon=\"simple-icons:stackoverflow\" inline={true} />\r\n                    </a> */}\r\n                    <a href=\"https://developers.google.com/profile/u/pushpakninave\" title=\"GDG\" target='_blank'>\r\n                    <Icon  className=\"icn\" icon=\"logos:google-developers\" width=\"35\" />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\nexport default Home;\r\n","import './App.css';\r\nimport Home from './component/Home';\r\nimport Particles from 'react-tsparticles';\r\n\r\n\r\nconst App=()=> {\r\n  return (\r\n    <div className=\"App\">\r\n    <Particles params={{\r\n    particles: {\r\n      number: {\r\n        value: 65,\r\n        density: {\r\n          enable: true,\r\n          value_area: 800\r\n        }\r\n      },\r\n      color: {\r\n        value: \"#1ba3c5\"\r\n      },\r\n      shape: {\r\n        type: \"circle\",\r\n        stroke: {\r\n          width: 0,\r\n          color: \"#000000\"\r\n        },\r\n        polygon: {\r\n          nb_sides: 6\r\n        },\r\n        image: {\r\n          src: \"img/github.svg\",\r\n          width: 100,\r\n          height: 100\r\n        }\r\n      },\r\n      opacity: {\r\n        value: 0.5,\r\n        random: false,\r\n        anim: {\r\n          enable: false,\r\n          speed: 1,\r\n          opacity_min: 0.1,\r\n          sync: false\r\n        }\r\n      },\r\n      size: {\r\n        value: 3.5,\r\n        random: true,\r\n        anim: {\r\n          enable: false,\r\n          speed: 30,\r\n          size_min: 0.1,\r\n          sync: false\r\n        }\r\n      },\r\n      line_linked: {\r\n        enable: true,\r\n        distance: 150,\r\n        color: \"#ffffff\",\r\n        opacity: 0.4,\r\n        width: 1\r\n      },\r\n      move: {\r\n        enable: true,\r\n        speed: 3,\r\n        direction: \"none\",\r\n        random: false,\r\n        straight: false,\r\n        out_mode: \"out\",\r\n        bounce: false,\r\n        attract: {\r\n          enable: false,\r\n          rotateX: 600,\r\n          rotateY: 1200\r\n        }\r\n      }\r\n    },\r\n    interactivity: {\r\n      detect_on: \"window\",\r\n      events: {\r\n        onhover: {\r\n          enable: true,\r\n          mode: \"repulse\"\r\n        },\r\n        onclick: {\r\n          enable: true,\r\n          mode: \"push\"\r\n        },\r\n        resize: true\r\n      },\r\n      modes: {\r\n        grab: {\r\n          distance: 400,\r\n          line_linked: {\r\n            opacity: 1\r\n          }\r\n        },\r\n        bubble: {\r\n          distance: 400,\r\n          size: 40,\r\n          duration: 2,\r\n          opacity: 8,\r\n          speed: 3\r\n        },\r\n        repulse: {\r\n          distance: 200,\r\n          duration: 0.4\r\n        },\r\n        push: {\r\n          particles_nb: 0\r\n        },\r\n        remove: {\r\n          particles_nb: 2\r\n        }\r\n      }\r\n    },\r\n    retina_detect: true\r\n  }}/>\r\n    <Home/>      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}